// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kstor.proto

package kstor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageCn            string   `protobuf:"bytes,3,opt,name=messageCn,proto3" json:"messageCn,omitempty"`
	Stack                []string `protobuf:"bytes,4,rep,name=stack,proto3" json:"stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_08e2b1664a84c45e, []int{0}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Status) GetMessageCn() string {
	if m != nil {
		return m.MessageCn
	}
	return ""
}

func (m *Status) GetStack() []string {
	if m != nil {
		return m.Stack
	}
	return nil
}

type KstorRequest struct {
	Cmd                  string   `protobuf:"bytes,1,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty"`
	Bucketname           string   `protobuf:"bytes,4,opt,name=Bucketname,proto3" json:"Bucketname,omitempty"`
	Path                 string   `protobuf:"bytes,5,opt,name=Path,proto3" json:"Path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KstorRequest) Reset()         { *m = KstorRequest{} }
func (m *KstorRequest) String() string { return proto.CompactTextString(m) }
func (*KstorRequest) ProtoMessage()    {}
func (*KstorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_08e2b1664a84c45e, []int{1}
}

func (m *KstorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KstorRequest.Unmarshal(m, b)
}
func (m *KstorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KstorRequest.Marshal(b, m, deterministic)
}
func (m *KstorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KstorRequest.Merge(m, src)
}
func (m *KstorRequest) XXX_Size() int {
	return xxx_messageInfo_KstorRequest.Size(m)
}
func (m *KstorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KstorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KstorRequest proto.InternalMessageInfo

func (m *KstorRequest) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *KstorRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KstorRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *KstorRequest) GetBucketname() string {
	if m != nil {
		return m.Bucketname
	}
	return ""
}

func (m *KstorRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type KstorReply struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KstorReply) Reset()         { *m = KstorReply{} }
func (m *KstorReply) String() string { return proto.CompactTextString(m) }
func (*KstorReply) ProtoMessage()    {}
func (*KstorReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_08e2b1664a84c45e, []int{2}
}

func (m *KstorReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KstorReply.Unmarshal(m, b)
}
func (m *KstorReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KstorReply.Marshal(b, m, deterministic)
}
func (m *KstorReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KstorReply.Merge(m, src)
}
func (m *KstorReply) XXX_Size() int {
	return xxx_messageInfo_KstorReply.Size(m)
}
func (m *KstorReply) XXX_DiscardUnknown() {
	xxx_messageInfo_KstorReply.DiscardUnknown(m)
}

var xxx_messageInfo_KstorReply proto.InternalMessageInfo

func (m *KstorReply) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *KstorReply) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type BackupRequest struct {
	Size                 int32    `protobuf:"varint,1,opt,name=Size,proto3" json:"Size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupRequest) Reset()         { *m = BackupRequest{} }
func (m *BackupRequest) String() string { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()    {}
func (*BackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_08e2b1664a84c45e, []int{3}
}

func (m *BackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupRequest.Unmarshal(m, b)
}
func (m *BackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupRequest.Marshal(b, m, deterministic)
}
func (m *BackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupRequest.Merge(m, src)
}
func (m *BackupRequest) XXX_Size() int {
	return xxx_messageInfo_BackupRequest.Size(m)
}
func (m *BackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupRequest proto.InternalMessageInfo

func (m *BackupRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type BackupReply struct {
	BackupFile           []byte   `protobuf:"bytes,1,opt,name=BackupFile,proto3" json:"BackupFile,omitempty"`
	Status               *Status  `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupReply) Reset()         { *m = BackupReply{} }
func (m *BackupReply) String() string { return proto.CompactTextString(m) }
func (*BackupReply) ProtoMessage()    {}
func (*BackupReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_08e2b1664a84c45e, []int{4}
}

func (m *BackupReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupReply.Unmarshal(m, b)
}
func (m *BackupReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupReply.Marshal(b, m, deterministic)
}
func (m *BackupReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupReply.Merge(m, src)
}
func (m *BackupReply) XXX_Size() int {
	return xxx_messageInfo_BackupReply.Size(m)
}
func (m *BackupReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupReply.DiscardUnknown(m)
}

var xxx_messageInfo_BackupReply proto.InternalMessageInfo

func (m *BackupReply) GetBackupFile() []byte {
	if m != nil {
		return m.BackupFile
	}
	return nil
}

func (m *BackupReply) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type RestorRequest struct {
	RestorFile           []byte   `protobuf:"bytes,1,opt,name=RestorFile,proto3" json:"RestorFile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestorRequest) Reset()         { *m = RestorRequest{} }
func (m *RestorRequest) String() string { return proto.CompactTextString(m) }
func (*RestorRequest) ProtoMessage()    {}
func (*RestorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_08e2b1664a84c45e, []int{5}
}

func (m *RestorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestorRequest.Unmarshal(m, b)
}
func (m *RestorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestorRequest.Marshal(b, m, deterministic)
}
func (m *RestorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestorRequest.Merge(m, src)
}
func (m *RestorRequest) XXX_Size() int {
	return xxx_messageInfo_RestorRequest.Size(m)
}
func (m *RestorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestorRequest proto.InternalMessageInfo

func (m *RestorRequest) GetRestorFile() []byte {
	if m != nil {
		return m.RestorFile
	}
	return nil
}

type RestorReply struct {
	Status               *Status  `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestorReply) Reset()         { *m = RestorReply{} }
func (m *RestorReply) String() string { return proto.CompactTextString(m) }
func (*RestorReply) ProtoMessage()    {}
func (*RestorReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_08e2b1664a84c45e, []int{6}
}

func (m *RestorReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestorReply.Unmarshal(m, b)
}
func (m *RestorReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestorReply.Marshal(b, m, deterministic)
}
func (m *RestorReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestorReply.Merge(m, src)
}
func (m *RestorReply) XXX_Size() int {
	return xxx_messageInfo_RestorReply.Size(m)
}
func (m *RestorReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RestorReply.DiscardUnknown(m)
}

var xxx_messageInfo_RestorReply proto.InternalMessageInfo

func (m *RestorReply) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RestorReply) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto.RegisterType((*Status)(nil), "kstor.Status")
	proto.RegisterType((*KstorRequest)(nil), "kstor.KstorRequest")
	proto.RegisterType((*KstorReply)(nil), "kstor.KstorReply")
	proto.RegisterType((*BackupRequest)(nil), "kstor.BackupRequest")
	proto.RegisterType((*BackupReply)(nil), "kstor.BackupReply")
	proto.RegisterType((*RestorRequest)(nil), "kstor.RestorRequest")
	proto.RegisterType((*RestorReply)(nil), "kstor.RestorReply")
}

func init() { proto.RegisterFile("kstor.proto", fileDescriptor_08e2b1664a84c45e) }

var fileDescriptor_08e2b1664a84c45e = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x4d, 0x4f, 0xea, 0x40,
	0x14, 0xa5, 0xd0, 0xf2, 0xd2, 0x5b, 0x48, 0xde, 0xbb, 0x8f, 0x45, 0x43, 0x5e, 0x08, 0x99, 0x17,
	0x93, 0xae, 0xd0, 0xe0, 0xc6, 0xc4, 0x1d, 0x24, 0x6a, 0xc2, 0xc6, 0x0c, 0xc6, 0xfd, 0x58, 0x46,
	0xc5, 0x7e, 0x4a, 0xa7, 0x0b, 0x8c, 0xff, 0xcc, 0x3f, 0x67, 0xe6, 0xa3, 0x65, 0x70, 0xe1, 0xc6,
	0xdd, 0x39, 0x67, 0xe6, 0xce, 0xb9, 0xe7, 0xb4, 0x10, 0x24, 0x95, 0x28, 0x76, 0xb3, 0x72, 0x57,
	0x88, 0x02, 0x3d, 0x45, 0xc8, 0x0b, 0xf4, 0xd7, 0x82, 0x89, 0xba, 0x42, 0x04, 0x37, 0x2e, 0x36,
	0x3c, 0x74, 0xa6, 0x4e, 0xe4, 0x51, 0x85, 0x31, 0x84, 0x5f, 0x19, 0xaf, 0x2a, 0xf6, 0xc4, 0xc3,
	0xee, 0xd4, 0x89, 0x7c, 0xda, 0x50, 0xfc, 0x07, 0xbe, 0x81, 0xcb, 0x3c, 0xec, 0xa9, 0xb3, 0x83,
	0x80, 0x23, 0xf0, 0x2a, 0xc1, 0xe2, 0x24, 0x74, 0xa7, 0xbd, 0xc8, 0xa7, 0x9a, 0x90, 0x77, 0x18,
	0xac, 0xa4, 0x29, 0xe5, 0xaf, 0x35, 0xaf, 0x04, 0xfe, 0x86, 0xde, 0x32, 0xdb, 0x28, 0x43, 0x9f,
	0x4a, 0x28, 0x95, 0x15, 0xdf, 0x1b, 0x2f, 0x09, 0xe5, 0x4b, 0xf7, 0x2c, 0xad, 0xb9, 0xf1, 0xd0,
	0x04, 0x27, 0x00, 0x8b, 0x3a, 0x4e, 0xb8, 0xc8, 0x59, 0xc6, 0x43, 0x57, 0x1d, 0x59, 0x8a, 0xcc,
	0x72, 0xcb, 0xc4, 0x73, 0xe8, 0xa9, 0x13, 0x85, 0xc9, 0x35, 0x80, 0x71, 0x2f, 0xd3, 0x3d, 0x9e,
	0x34, 0xb9, 0x95, 0x7d, 0x30, 0x1f, 0xce, 0x74, 0x39, 0x5a, 0xa4, 0x56, 0x29, 0xdb, 0xfc, 0xb1,
	0x30, 0x1b, 0x29, 0x4c, 0xfe, 0xc3, 0x70, 0xc1, 0xe2, 0xa4, 0x2e, 0x9b, 0x1c, 0x08, 0xee, 0x7a,
	0xfb, 0xd6, 0x36, 0x27, 0x31, 0xb9, 0x83, 0xa0, 0xb9, 0x24, 0xed, 0xe4, 0xc2, 0x8a, 0x5e, 0x6d,
	0x53, 0x7d, 0x71, 0x40, 0x2d, 0xc5, 0x5a, 0xa7, 0xfb, 0xcd, 0x3a, 0xe4, 0x14, 0x86, 0x94, 0xdb,
	0x15, 0x4e, 0x00, 0xb4, 0x60, 0xbf, 0x7b, 0x50, 0xc8, 0x0d, 0x04, 0xcd, 0xc0, 0xcf, 0x52, 0xcf,
	0x3f, 0x1c, 0xf0, 0x54, 0x7f, 0x78, 0x61, 0x3e, 0xe3, 0xb2, 0xc8, 0x32, 0x96, 0x6f, 0xf0, 0xaf,
	0x79, 0xc4, 0xfe, 0xb6, 0xe3, 0x3f, 0xc7, 0x62, 0x99, 0xee, 0x49, 0x07, 0x2f, 0x21, 0x50, 0x5c,
	0x07, 0xc7, 0x91, 0xb9, 0x73, 0xd4, 0xe6, 0x18, 0xbf, 0xa8, 0x6a, 0xf4, 0xcc, 0x69, 0x87, 0x75,
	0x9e, 0x76, 0xf8, 0xa8, 0x8f, 0x76, 0xd8, 0x0a, 0x4d, 0x3a, 0x91, 0xf3, 0xd0, 0x57, 0x3f, 0xfd,
	0xf9, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x82, 0x3f, 0x29, 0x42, 0x03, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KstorClient is the client API for Kstor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KstorClient interface {
	KstorCommand(ctx context.Context, in *KstorRequest, opts ...grpc.CallOption) (*KstorReply, error)
	KstorBackup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (Kstor_KstorBackupClient, error)
	KstorRestor(ctx context.Context, opts ...grpc.CallOption) (Kstor_KstorRestorClient, error)
}

type kstorClient struct {
	cc *grpc.ClientConn
}

func NewKstorClient(cc *grpc.ClientConn) KstorClient {
	return &kstorClient{cc}
}

func (c *kstorClient) KstorCommand(ctx context.Context, in *KstorRequest, opts ...grpc.CallOption) (*KstorReply, error) {
	out := new(KstorReply)
	err := c.cc.Invoke(ctx, "/kstor.Kstor/KstorCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kstorClient) KstorBackup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (Kstor_KstorBackupClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Kstor_serviceDesc.Streams[0], "/kstor.Kstor/KstorBackup", opts...)
	if err != nil {
		return nil, err
	}
	x := &kstorKstorBackupClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Kstor_KstorBackupClient interface {
	Recv() (*BackupReply, error)
	grpc.ClientStream
}

type kstorKstorBackupClient struct {
	grpc.ClientStream
}

func (x *kstorKstorBackupClient) Recv() (*BackupReply, error) {
	m := new(BackupReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *kstorClient) KstorRestor(ctx context.Context, opts ...grpc.CallOption) (Kstor_KstorRestorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Kstor_serviceDesc.Streams[1], "/kstor.Kstor/KstorRestor", opts...)
	if err != nil {
		return nil, err
	}
	x := &kstorKstorRestorClient{stream}
	return x, nil
}

type Kstor_KstorRestorClient interface {
	Send(*RestorRequest) error
	CloseAndRecv() (*RestorReply, error)
	grpc.ClientStream
}

type kstorKstorRestorClient struct {
	grpc.ClientStream
}

func (x *kstorKstorRestorClient) Send(m *RestorRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *kstorKstorRestorClient) CloseAndRecv() (*RestorReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(RestorReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// KstorServer is the server API for Kstor service.
type KstorServer interface {
	KstorCommand(context.Context, *KstorRequest) (*KstorReply, error)
	KstorBackup(*BackupRequest, Kstor_KstorBackupServer) error
	KstorRestor(Kstor_KstorRestorServer) error
}

func RegisterKstorServer(s *grpc.Server, srv KstorServer) {
	s.RegisterService(&_Kstor_serviceDesc, srv)
}

func _Kstor_KstorCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KstorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KstorServer).KstorCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kstor.Kstor/KstorCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KstorServer).KstorCommand(ctx, req.(*KstorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kstor_KstorBackup_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BackupRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KstorServer).KstorBackup(m, &kstorKstorBackupServer{stream})
}

type Kstor_KstorBackupServer interface {
	Send(*BackupReply) error
	grpc.ServerStream
}

type kstorKstorBackupServer struct {
	grpc.ServerStream
}

func (x *kstorKstorBackupServer) Send(m *BackupReply) error {
	return x.ServerStream.SendMsg(m)
}

func _Kstor_KstorRestor_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(KstorServer).KstorRestor(&kstorKstorRestorServer{stream})
}

type Kstor_KstorRestorServer interface {
	SendAndClose(*RestorReply) error
	Recv() (*RestorRequest, error)
	grpc.ServerStream
}

type kstorKstorRestorServer struct {
	grpc.ServerStream
}

func (x *kstorKstorRestorServer) SendAndClose(m *RestorReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *kstorKstorRestorServer) Recv() (*RestorRequest, error) {
	m := new(RestorRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Kstor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kstor.Kstor",
	HandlerType: (*KstorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KstorCommand",
			Handler:    _Kstor_KstorCommand_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "KstorBackup",
			Handler:       _Kstor_KstorBackup_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "KstorRestor",
			Handler:       _Kstor_KstorRestor_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "kstor.proto",
}
